# -*- coding: utf-8 -*-
"""WebScrapingStoreLocationsUsingBeautifulSoup.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c91TZQSQu3Vmm3sHDWWuaOrpLjhE6s1x
"""

def get_source_code(url):
    """Gets the source code of the specified URL.

    Args:
        url (str): The URL of the website.

    Returns:
        str: The source code of the website.
    """

    # This function gets the source code of the specified URL.
    # The `requests` library is used to make a request to the website.
    # The `status_code` attribute of the response object is checked to make sure that the request was successful.

    response = requests.get(url)

    if response.status_code == 200:
        return response.text
    else:
        raise Exception("Error getting source code: {}".format(response.status_code))

def get_dealers_data(html):
    """Extracts the data of dealers from the specified HTML.

    Args:
        html (str): The HTML of the website.

    Returns:
        list: The data of dealers.
    """

    # This function extracts the data of dealers from the specified HTML.
    # The `BeautifulSoup` library is used to parse the HTML.

    soup = BeautifulSoup(html, "html.parser")

    dealers = []

    # This for loop iterates over the list of dealers and extracts the data for each dealer.

    for li in soup.find_all("li", {"class": "info-window"}):

        name = li.find("span", {"class": "org"})
        if name:
            name = name.text

        address = li.find("span", {"class": "street-address"})
        if address:
            address = address.text

        phone = li.find("span", {"data-phone-ref": "SALES"})
        if phone:
            phone = phone.text

        website = li.find("a", {"class": "url"})
        if website:
            website = website["href"]

        dealer = {
            "name": name,
            "address": address,
            "phone": phone,
            "website": website
        }

        dealers.append(dealer)

    return dealers

#Get the URL from the user and print the data of dealers use this URL: https://www.lithia.com/locations/store-locations.htm
def main():
    url = input("Enter the URL: ")
    html = get_source_code(url)
    dealers_data = get_dealers_data(html)
    df = pd.DataFrame(dealers_data)
    print(df)
    df.to_excel("Lithiadealers.xlsx", index=False)

if __name__ == "__main__":
    main()